;--------------------------------------------------- 16550 UART ----------------------------------------------------
;----------------------------------------------------;
; UART Init
; param: 	none
; return:	none
;----------------------------------------------------;
UART_Init	;{
				lda		#$80			; DLAB=1
				sta		UART+3
				
				lda		#17				; 78:baudrate 9600 @ 12MHz, 13:baudrate 57600 @ 12MHz, 26:baudrate 38400 @ 16MHz, 17: baudrate 57600 @ 16MHz, 9:baudrate 115200 @ 16MHz
				sta		UART
				lda		#$00	  	
				sta		UART+1
				
				lda		#$01	  		; Fifo enable
				sta		UART+2
				
				lda		#$03			; DLAB=0, config 8N1 
				sta		UART+3
				
				lda		#$01			; enable rx interrrupt
				sta		UART+1
				rts
;}

;----------------------------------------------------;
; UART Read
; param: 	none
; return:	read byte -> B when when A != 0
;----------------------------------------------------;
UartRead ;{
				lda		UART+5 			; check if a byte is available
				anda	#1				; a contains not NULL when a byte available
				beq		_UartRead1
				ldb 	UART   			; read first byte
_UartRead1		rts
;}

;----------------------------------------------------;
; wait until a char available or 256 polling cycles timeout
; param: 	none
; return:	none
;----------------------------------------------------;
waitdata ;{		
				clrb
_waitdata1		decb
				beq		_waitdata2 		; exit
				lda		UART+5 			; check if a byte is available
				anda	#1
				beq		_waitdata1		
_waitdata2		rts
;}

;----------------------------------------------------;
; wait until the remaining char is sent (fifo empty)
; param: 	none
; return:	none
;----------------------------------------------------;
waitSendDone ;{
				lda		UART+5 			; check if uart TX ready (waiting for THRE bit set)
				anda	#$20
				beq		waitSendDone		
				rts
;}

;----------------------------------------------------;
; wait CTS
; param: 	none
; return:	none
;----------------------------------------------------;
waitCTS ;{
				lda		UART+6 			; read the moden status register
				anda	#$10
				beq		waitCTS
				rts
;}
